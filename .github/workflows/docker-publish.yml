# .github/workflows/docker-publish.yml

# 1. 工作流名称
name: Docker Build and Push

# 2. 触发条件：每当 main 分支有新的推送时触发
on:
  push:
    branches: [ "main" ]

# 3. 定义工作任务
jobs:
  build-and-push:
    # 使用最新的 Ubuntu 虚拟机来运行此任务
    runs-on: ubuntu-latest
    
    # 任务步骤
    steps:
      # 步骤 1: 检出（下载）您的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 QEMU，这是 buildx 进行跨平台构建所必需的
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 步骤 3: 设置 Docker Buildx，这是构建多架构镜像的核心工具
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤 4: 登录到 Docker Hub
      # 它会自动使用您在 GitHub Secrets 中设置的用户名和令牌
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤 5: 构建并推送多架构镜像
      # 这是最核心的一步，它会同时构建 amd64 和 arm64 两个版本
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          # 指定要构建的平台
          platforms: linux/amd64,linux/arm64
          # 直接推送到 Docker Hub
          push: true
          # 为镜像打上标签，格式为: 用户名/仓库名:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/job-agent:latest